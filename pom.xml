<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.hs-heilbronn.mi</groupId>
  <artifactId>de-lemma</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <description>An OpenNLP based lemmatizer for (medical) texts written in German language</description>
  <url>https://github.com/mawiesne/DE-Lemma</url>

  <licenses>
    <license>
      <name>Apache 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <organization>
    <name>Heilbronn University - Medical Informatics</name>
    <url>https://www.hs-heilbronn.de</url>
  </organization>

  <developers>
    <developer>
      <id>mawiesne</id>
      <name>Martin Wiesner</name>
      <email>martin.wiesner@hs-heilbronn.de</email>
      <organization>Heilbronn University - Medical Informatics</organization>
      <organizationUrl>https://www.hs-heilbronn.de</organizationUrl>
      <roles>
        <role>project lead</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/mawiesne/DE-Lemma.git</connection>
    <developerConnection>git@github.com:mawiesne/DE-Lemma.git</developerConnection>
    <url>https://github.com/mawiesne/DE-Lemma</url>
  </scm>

  <properties>
    <!-- Application settings -->
    <copyright.year>2024</copyright.year>
    <license.inceptionYear>2023</license.inceptionYear>
    <license.licenseName>apache_v2</license.licenseName>

    <java.source>17</java.source>
    <java.target>17</java.target>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compile.encoding>UTF-8</maven.compile.encoding>
    <maven.compiler.target>${java.target}</maven.compiler.target>

    <minimum.maven.version>3.6.0</minimum.maven.version>
    <!-- Maven Range Syntax -->
    <required.maven.version>[${minimum.maven.version},)</required.maven.version>

    <!-- Apache OpenNLP binding -->
    <opennlp.version>2.4.0</opennlp.version>

    <!-- Apache commons stuff -->
    <commons.lang3.version>3.16.0</commons.lang3.version>

    <slf4j.version>2.0.16</slf4j.version>
    <log4j.version>2.23.1</log4j.version>

    <!-- additional dependencies -->
    <junit.jupiter.version>5.11.0</junit.jupiter.version>
    <junit.platform.version>1.11.0</junit.platform.version>

    <!-- additional plugin dependencies -->
    <maven.license.plugin>2.4.0</maven.license.plugin>
    <maven.gpg.plugin>3.2.4</maven.gpg.plugin>
    <maven.compiler.plugin>3.13.0</maven.compiler.plugin>
    <maven.javadoc.plugin>3.10.0</maven.javadoc.plugin>
    <maven.surefire.plugin>3.5.0</maven.surefire.plugin>
    <maven.failsafe.plugin>3.0.0</maven.failsafe.plugin>
    <maven.build.helper.plugin>3.3.0</maven.build.helper.plugin>
    <maven.forbiddenapis.plugin>3.7</maven.forbiddenapis.plugin>
    <maven.source.plugin>3.3.1</maven.source.plugin>
    <maven.versions.version>2.17.1</maven.versions.version>
    <maven.enforcer.version>3.5.0</maven.enforcer.version>
    <maven.pmd.version>3.17.0</maven.pmd.version>
    <maven.source.version>3.3.0</maven.source.version>
    <maven.install.version>3.1.2</maven.install.version>
    <maven.site.version>3.12.1</maven.site.version>
    <maven.clean.version>3.4.0</maven.clean.version>
    <maven.jar.version>3.4.2</maven.jar.version>

    <jacoco.version>0.8.8</jacoco.version>

  </properties>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <name>Sonatype Nexus snapshot repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <name>Sonatype Nexus release repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <!-- OpenNLP binding -->
      <dependency>
        <groupId>org.apache.opennlp</groupId>
        <artifactId>opennlp-tools</artifactId>
        <version>${opennlp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- TEST Scope -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-runner</artifactId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-api</artifactId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-engine</artifactId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- OpenNLP binding -->
    <dependency>
      <groupId>org.apache.opennlp</groupId>
      <artifactId>opennlp-tools</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>

    <!-- TEST Scope -->
    <!--
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-engine</artifactId>
    </dependency>
    -->
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${maven.license.plugin}</version>
          <configuration>
            <verbose>false</verbose>
            <includes>
              <include>**/*.java</include>
            </includes>
          </configuration>
          <executions>
            <execution>
              <id>generate-license-headers</id>
              <goals>
                <goal>update-file-header</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <roots>
                  <root>src/main/java</root>
                  <root>src/test/java</root>
                </roots>
                <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                <processStartTag>
                  ========================LICENSE_START=================================
                </processStartTag>
                <processEndTag>=========================LICENSE_END==================================
                </processEndTag>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin}</version>
          <configuration>
            <source>${java.source}</source>
            <target>${java.target}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven.source.plugin}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.plugin}</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
            <!-- workaround for https://bugs.openjdk.java.net/browse/JDK-8212233 -->
            <javaApiLinks>
              <property>
                <name>foo</name>
                <value>bar</value>
              </property>
            </javaApiLinks>
            <encoding>utf-8</encoding>
            <show>public</show>
            <detectOfflineLinks>false</detectOfflineLinks>
            <detectJavaApiLink>false</detectJavaApiLink>
            <!-- Speeds up the build of the javadocs -->
            <quiet>true</quiet>
            <doclint>none</doclint>
            <additionalJOption>-html5</additionalJOption>
            <failOnError>false</failOnError>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin}</version>
          <configuration>
            <skipTests>${skipUTs}</skipTests>
            <argLine> -Xmx512m -Dfile.encoding=UTF-8 </argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>de.thetaphi</groupId>
          <artifactId>forbiddenapis</artifactId>
          <version>${maven.forbiddenapis.plugin}</version>
          <configuration>
            <!-- if the used Java version is too new, don't fail, just do nothing. -->
            <failOnUnsupportedJava>false</failOnUnsupportedJava>
            <bundledSignatures>
              <bundledSignature>jdk-unsafe</bundledSignature>
              <bundledSignature>jdk-deprecated</bundledSignature>
              <bundledSignature>jdk-internal</bundledSignature>
              <!-- disallow undocumented classes like sun.misc.Unsafe: -->
              <bundledSignature>jdk-non-portable</bundledSignature>
              <!-- don't allow unsafe reflective access: -->
              <bundledSignature>jdk-reflection</bundledSignature>
            </bundledSignatures>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
                <goal>testCheck</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${maven.owasp.dep-check.plugin}</version>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven.gpg.plugin}</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Define default Maven Plugins explicitly here! -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>de.thetaphi</groupId>
        <artifactId>forbiddenapis</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven.enforcer.version}</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <message>Check your local maven setting</message>
                  <version>${required.maven.version}</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-Xmx512m -Dfile.encoding=UTF-8</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source.plugin}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>tool-versioncheck</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>${maven.versions.version}</version>
            <executions>
              <execution>
                <id>show-updates</id>
                <phase>compile</phase>
                <goals>
                  <goal>display-plugin-updates</goal>
                  <goal>display-dependency-updates</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
